package com.shopmate.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemAllPropertiesEquals(Item expected, Item actual) {
        assertItemAutoGeneratedPropertiesEquals(expected, actual);
        assertItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemAllUpdatablePropertiesEquals(Item expected, Item actual) {
        assertItemUpdatableFieldsEquals(expected, actual);
        assertItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemAutoGeneratedPropertiesEquals(Item expected, Item actual) {
        assertThat(expected)
            .as("Verify Item auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemUpdatableFieldsEquals(Item expected, Item actual) {
        assertThat(expected)
            .as("Verify Item relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()))
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemUpdatableRelationshipsEquals(Item expected, Item actual) {
        assertThat(expected)
            .as("Verify Item relationships")
            .satisfies(e -> assertThat(e.getTrips()).as("check trips").isEqualTo(actual.getTrips()));
    }
}
